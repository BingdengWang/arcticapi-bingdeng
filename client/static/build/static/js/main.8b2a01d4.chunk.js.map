{"version":3,"sources":["context.js","header-container.js","left-container.js","right-container.js","footer-container.js","product-detail.js","product-card.js","home.js","util.js","cart.js","checkout.js","checkout-starter.js","receipt.js","about.js","help.js","App.js","context-provider.js","serviceWorker.js","index.js"],"names":["AppContext","React","createContext","HeaderContainer","props","context","useContext","expand","to","Brand","alt","src","Toggle","aria-controls","Collapse","id","className","icon","faShoppingCart","cartCount","title","alignRight","Item","Divider","href","LeftContainer","categories","counts","totalCount","Object","values","products","product","category","map","cat","key","RightContainer","FooterContainer","Date","getFullYear","ProductDetail","history","useHistory","useState","setCurrentImage","match","useRouteMatch","params","pid","style","width","height","name","process","filename","img_idx","onMouseEnter","e","price","description","variant","onClick","addToCart","push","ProductCard","right","top","opacity","Img","Header","Title","Text","Home","products_arr","cid","parseInt","filter","rows","i","length","slice","fluid","row","row_idx","md","formatNumber","num","parseFloat","toFixed","replace","Cart","CartTable","role","data","total","entries","cart","qty","borderless","extended","size","removeFromCart","stripePromise","loadStripe","Checkout","stripe","CheckoutController","useStripe","elements","useElements","getCartTotal","stripeError","setStripeError","initialValues","address1","address2","city","state","zipcode","validateOnChange","validateOnBlur","validate","console","log","onSubmit","actions","a","async","items","axios","post","resp","confirmCardPayment","client_secret","payment_method","card","getElement","CardElement","billing_details","stripeResp","setSubmitting","error","message","clearCart","form","PaymentForm","Body","type","disabled","isSubmitting","animation","Input","rProps","Group","Label","Control","placeholder","field","meta","touched","Promise","resolve","setTimeout","Receipt","About","noGutters","Help","App","path","AppProvider","setState","produce","draft","count","Provider","value","this","get","cat_resp","prod_resp","prod","Component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8b2a01d4.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst AppContext = React.createContext()\nexport default AppContext\n","import React from 'react'\nimport * as bs from 'react-bootstrap'\nimport { Link } from \"react-router-dom\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons'\nimport AppContext from './context'\n\n\nfunction HeaderContainer(props) {\n    const context = React.useContext(AppContext)\n\n    return (\n        <bs.Navbar expand=\"lg\">\n            <Link to=\"/\">\n                <bs.Navbar.Brand>\n                    <img alt=\"Arctic.com\" src=\"media/starfleet-32.png\" />\n                </bs.Navbar.Brand>\n            </Link>\n            <bs.Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <bs.Navbar.Collapse id=\"basic-navbar-nav\">\n                <bs.Nav className=\"mr-auto\">\n                    <Link to=\"/\" className=\"nav-link\">Home</Link>\n                    <Link to=\"/about\" className=\"nav-link\">About</Link>\n                    <Link to=\"/help\" className=\"nav-link\">Help</Link>\n                </bs.Nav>\n                <bs.Nav>\n                    <bs.Nav className=\"mr-auto pr-4\">\n                        <Link to=\"/cart\" className=\"nav-link\">\n                            <FontAwesomeIcon icon={faShoppingCart} className=\"mr-2\"/>\n                            {context.cartCount}\n                        </Link>\n                    </bs.Nav>\n                    <bs.NavDropdown title=\"Welcome, Bingdeng\" alignRight>\n                        <bs.NavDropdown.Item>My Account</bs.NavDropdown.Item>\n                        <bs.NavDropdown.Divider />\n                        <bs.NavDropdown.Item href=\"#action/3.4\">Logout</bs.NavDropdown.Item>\n                    </bs.NavDropdown>\n                </bs.Nav>\n            </bs.Navbar.Collapse>\n        </bs.Navbar>\n    )\n}\nexport default HeaderContainer\n","import React from 'react'\nimport * as bs from 'react-bootstrap'\nimport AppContext from './context'\nimport { Link } from \"react-router-dom\"\n\n\nfunction LeftContainer(props) {\n    const context = React.useContext(AppContext)\n\n    // if categories haven't been retrieved yet, just show a loading message\n    if (!context.categories) {\n        return <div>Loading...</div>\n    }\n\n    // count the number of products in each category\n    const counts = {}\n    let totalCount = 0\n    for (const product of Object.values(context.products)) {\n        counts[product.category.id] = (counts[product.category.id] || 0) + 1\n        totalCount += 1\n    }\n    // console.log(counts)\n\n    // render the categories\n    return (\n        <bs.Nav className=\"flex-column\">\n            <Link\n                to={`/`}\n                className=\"nav-link\"\n            >\n                    All Products ({totalCount})\n            </Link>\n            <bs.Nav.Item>\n                {Object.values(context.categories).map((cat) => (\n                    <Link\n                        to={`/category/${cat.id}`}\n                        key={cat.id}\n                        className=\"nav-link\"\n                    >\n                        {cat.title} ({counts[cat.id]})\n                    </Link>\n                ))}\n            </bs.Nav.Item>\n        </bs.Nav>\n    )\n}\nexport default LeftContainer\n","import React from 'react'\n\n\nfunction RightContainer(props) {\n    return (\n        <>\n            <h3>Recent:</h3>\n        </>\n    )\n}\nexport default RightContainer\n","import React from 'react'\n\n\nfunction FooterContainer(props) {\n    return (\n        <div className=\"text-center\">\n            Arctic.com  &copy; {new Date().getFullYear()}\n        </div>\n    )\n}\nexport default FooterContainer\n","import React from 'react'\nimport * as bs from 'react-bootstrap'\nimport { useRouteMatch, useHistory } from 'react-router-dom'\nimport AppContext from './context'\n\n\nfunction ProductDetail(props) {\n    const context = React.useContext(AppContext)\n    const history = useHistory()\n\n    const [ currentImage, setCurrentImage ] = React.useState(\"1\")\n    const match = useRouteMatch(\"/product/:pid\")\n    const product = context.products[match.params.pid]\n    if (!product) {\n        return <h2 className=\"m-4 text-center\">Product not found</h2>\n    }\n\n    return (\n        <div className=\"m-4\">\n            <div\n                className=\"float-right border rounded m-2 p-2\"\n                style={{\n                    width: '300px',\n                    height: '300px',\n                }}\n            >\n                <img\n                    alt={product.name}\n                    src={`${process.env.PUBLIC_URL}/media/products/${product.filename}-1.png`}\n                    className=\"w-100\"\n                />\n                <div>\n                    {[\"1\", \"2\", \"3\", \"4\"].map(img_idx => (\n                        <img\n                            key={product.id + img_idx}\n                            alt={product.name}\n                            src={`${process.env.PUBLIC_URL}/media/products/${product.filename}-1.png`}\n                            className=\"border rounded mt-3 mx-1\"\n                            style={{\n                                height: \"30px\",\n                                width: \"30px\",\n                            }}\n                            onMouseEnter={e => {\n                                setCurrentImage(img_idx)\n                            }}\n                        />\n                    ))}\n                </div>\n            </div>\n\n            <h1>{product.name}</h1>\n            <h2>${product.price}</h2>\n            <p>{product.description}</p>\n\n            <p className=\"mt-5\">\n                <bs.Button\n                    variant=\"warning\"\n                    onClick={e => {\n                        context.addToCart(product.id)\n                        history.push('/cart')\n                    }}\n                >\n                    Add to Cart\n                </bs.Button>\n            </p>\n        </div>\n    )\n}\nexport default ProductDetail\n","import React from 'react'\nimport * as bs from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\n\nfunction ProductCard(props) {\n    return (\n        <bs.Card className=\"mx-2 my-4\">\n            <Link\n                to={`/product/${props.product.id}`}\n                className=\"btn btn-sm btn-dark position-absolute px-2 py-1 rounded shadow\"\n                style={{\n                    right: \"5px\",\n                    top: \"5px\",\n                    opacity: \"90%\",\n                }}\n            >\n                Details\n            </Link>\n            <bs.Card.Img\n                variant=\"top\"\n                alt={props.product.name}\n                src={`${process.env.PUBLIC_URL}/media/products/${props.product.filename}-1.png`}\n                className=\"p-2\"\n            />\n            <bs.Card.Header className=\"border-top text-center\">\n                <bs.Card.Title className=\"mb-2\">{props.product.name}</bs.Card.Title>\n                <bs.Card.Text>${props.product.price}</bs.Card.Text>\n            </bs.Card.Header>\n        </bs.Card>\n    )\n}\nexport default ProductCard\n","import React from 'react'\nimport * as bs from 'react-bootstrap'\nimport { useRouteMatch } from 'react-router-dom'\nimport ProductCard from './product-card'\nimport AppContext from './context'\n\nconst NUM_COLUMNS = 4\n\n\nfunction Home(props) {\n    const context = React.useContext(AppContext)\n\n    // get an array of products, then filter to the current category\n    let products_arr = Object.values(context.products)\n    const match = useRouteMatch(\"/category/:cid\")\n    const cid = match ? parseInt(match.params.cid) : 0\n    if (cid) {\n        products_arr = products_arr.filter(product => {\n            return product.category.id === cid\n        })\n    }\n\n    // slice the products into an array of arrays (e.g. a list of rows of 4 products each)\n    const rows = []\n    for (let i = 0; i < products_arr.length; i += NUM_COLUMNS) {\n        rows.push(products_arr.slice(i, i + NUM_COLUMNS))\n    }\n\n    // render\n    return (\n        <bs.Container fluid>\n            <bs.Row>\n                <bs.Col>\n                    <h1 className=\"mt-3\">\n                        {context.categories[cid] ? context.categories[cid].title : 'All Products' }\n                    </h1>\n                </bs.Col>\n            </bs.Row>\n\n            {rows.map((row, row_idx) => (\n                <bs.Row key={row_idx}>\n                    {row.map(product => (\n                        <bs.Col md=\"3\" key={product.id}>\n                            <ProductCard product={product} />\n                        </bs.Col>\n                    ))}\n                </bs.Row>\n            ))}\n        </bs.Container>\n    )\n}\nexport default Home\n","\n\nexport function formatNumber(num) {\n    return parseFloat(num).toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n}\n","import React from 'react'\nimport * as bs from 'react-bootstrap'\nimport { formatNumber } from './util'\nimport { Link } from \"react-router-dom\"\nimport AppContext from './context'\n\n\nfunction Cart(props) {\n    return (\n        <bs.Container fluid>\n            <bs.Row>\n                <bs.Col>\n                    <h1 className=\"mt-3\">\n                        Shopping Cart\n                    </h1>\n                </bs.Col>\n            </bs.Row>\n            <bs.Row>\n                <bs.Col>\n                    <CartTable />\n                </bs.Col>\n            </bs.Row>\n            <bs.Row>\n                <bs.Col className=\"text-center\">\n                    <Link to=\"/checkout\" className=\"btn btn-success\" role=\"button\">\n                        Checkout\n                    </Link>\n                </bs.Col>\n            </bs.Row>\n        </bs.Container>\n    )\n}\nexport default Cart\n\n\n\n/** The table of items in the cart */\nfunction CartTable(props) {\n    const context = React.useContext(AppContext)\n\n    // create the table data (doing before render because easier here)\n    const data = []\n    let total = 0\n    for (const [pid, qty] of Object.entries(context.cart)) {\n        const product = context.products[pid]\n        if (product) {  // might be undefined if products not loaded from API yet\n            total += (qty * product.price)\n            data.push({\n                'product': product,\n                'qty': qty,\n                'extended': qty * product.price,\n            })\n        }\n    }\n\n    return (\n        <bs.Table borderless className=\"mt-4\">\n            <tbody>\n                <tr className=\"border-bottom\">\n                    <th className=\"text-center\">Product</th>\n                    <th className=\"text-center\">Quantity</th>\n                    <th className=\"text-center\">Price</th>\n                    <th className=\"text-center\">Extended</th>\n                    <th></th>\n                </tr>\n                {data.map(row => (\n                    <tr key={row.product.id}>\n                        <td>\n                            <img\n                                alt={row.product.name}\n                                src={`${process.env.PUBLIC_URL}/media/products/${row.product.filename}-1.png`}\n                                className=\"border rounded mr-3\"\n                                style={{\n                                    height: \"60px\",\n                                    width: \"60px\",\n                                }}\n                            />\n                            {row.product.name}\n                        </td>\n                        <td className=\"text-right\">{row.qty}</td>\n                        <td className=\"text-right\">{formatNumber(row.product.price)}</td>\n                        <td className=\"text-right\">{formatNumber(row.extended)}</td>\n                        <td className=\"text-center\">\n                            <bs.Button\n                                variant=\"outline-secondary\"\n                                size=\"sm\"\n                                onClick={e => {\n                                    context.removeFromCart(row.product.id)\n                                }}\n                            >\n                                Remove\n                            </bs.Button>\n                        </td>\n                    </tr>\n                ))}\n                <tr className=\"border-top\">\n                    <th className=\"text-center\">Total</th>\n                    <th></th>\n                    <th></th>\n                    <th className=\"text-right\">{formatNumber(total)}</th>\n                    <th></th>\n                </tr>\n            </tbody>\n        </bs.Table>\n    )\n}\n","import React from 'react'\nimport * as bs from 'react-bootstrap'\nimport axios from 'axios'\nimport { Formik, Form, Field} from 'formik'\nimport { useHistory } from 'react-router-dom'\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { formatNumber } from './util'\nimport AppContext from './context'\n\n\nconst stripePromise = loadStripe(\"pk_test_CGqDTM9y0RuDuWjH23HpNoyb00wMuSzv3B\");\n\n\nfunction Checkout(props) {\n    return (\n        <Elements stripe={stripePromise}>\n            <CheckoutController />\n        </Elements>\n    )\n}\nexport default Checkout\n\n\nconst CheckoutController = props => {\n    const context = React.useContext(AppContext)\n    const history = useHistory()\n    const stripe = useStripe()\n    const elements = useElements()\n    const total = context.getCartTotal()\n    const [stripeError, setStripeError] = React.useState(null)\n\n    return (\n        <Formik\n            initialValues={{\n                name: 'Bingdeng',\n                address1: '1965 N 40 W',\n                address2: 'Apt 123',\n                city: 'Provo',\n                state: 'UT',\n                zipcode: '84602',\n            }}\n            validateOnChange={false}\n            validateOnBlur={false}\n            validate={values => {\n                console.log('validating', values)\n                return {}\n            }}\n            onSubmit={async (values, actions) => {\n                console.log('submit', values)\n                setStripeError(null)\n\n                // create the sale\n                const items = []\n                for (const [pid, qty] of Object.entries(context.cart)) {\n                    const product = context.products[pid]\n                    if (product) {\n                        items.push({\n                            pid: pid,\n                            qty: qty,\n                            price: product.price,\n                        })\n                    }\n                }\n                const resp = await axios.post('/api/sale/', {\n                    name: values.name,\n                    address1: values.address1,\n                    address2: values.address2,\n                    city: values.city,\n                    state: values.state,\n                    zipcode: values.zipcode,\n                    total: total,\n                    items: items,\n                })\n                console.log(resp.data)\n\n                // submit the details to stripe\n                const stripeResp = await stripe.confirmCardPayment(resp.data.client_secret, {\n                    payment_method: {\n                        card: elements.getElement(CardElement),\n                        billing_details: {\n                            name: values.name,\n                        },\n                    }\n                })\n                console.log(stripeResp)\n                actions.setSubmitting(false)\n                if (stripeResp.error) {\n                    setStripeError(stripeResp.error.message)\n                    return\n                }\n\n                // clear the cart and forward on\n                context.clearCart()\n                history.push('/receipt')\n            }}\n        >{form => (\n            <>\n                {stripeError &&\n                    <div className=\"mb-3 text-center text-danger\">{stripeError}</div>\n                }\n                <PaymentForm form={form} total={total} />\n            </>\n        )}</Formik>\n    )\n}\n\n\n/**\n * The form layout/html.\n */\nconst PaymentForm = props => (\n    <Form>\n        <bs.Container fluid>\n            <bs.Row>\n                <bs.Col>\n                    <h1 className=\"mt-3\">Checkout</h1>\n                </bs.Col>\n            </bs.Row>\n            <bs.Row className=\"my-3\">\n                <bs.Col md=\"6\">\n                    <bs.Card>\n                        <bs.Card.Header>\n                            <bs.Card.Title>Shipping</bs.Card.Title>\n                        </bs.Card.Header>\n                        <bs.Card.Body>\n                            <Input title=\"Name:\" name=\"name\" type=\"text\" />\n                            <Input title=\"Address1:\" name=\"address1\" type=\"text\" />\n                            <Input title=\"Address2:\" name=\"address2\" type=\"text\" />\n                            <Input title=\"City:\" name=\"city\" type=\"text\" />\n                            <Input title=\"State:\" name=\"state\" type=\"text\" />\n                            <Input title=\"Zip:\" name=\"zipcode\" type=\"text\" />\n                        </bs.Card.Body>\n                    </bs.Card>\n                </bs.Col>\n                <bs.Col md=\"6\">\n                    <bs.Card>\n                        <bs.Card.Header>\n                            <bs.Card.Title>Payment</bs.Card.Title>\n                        </bs.Card.Header>\n                        <bs.Card.Body>\n                            <CardElement />\n                        </bs.Card.Body>\n                    </bs.Card>\n\n                    <div className=\"mt-4\">\n                        Your card will be charged <b>{formatNumber(props.total)}</b>.\n                    </div>\n\n                    <div className=\"text-center mt-4\">\n                        <bs.Button\n                            variant=\"success\"\n                            type=\"submit\"\n                            className=\"d-inline-flex align-items-center\"\n                            disabled={props.form.isSubmitting}\n                        >\n                            {props.form.isSubmitting &&\n                                <bs.Spinner className=\"mr-2\" size=\"sm\" animation=\"border\" />\n                            }\n                            Purchase\n                        </bs.Button>\n                    </div>\n                </bs.Col>\n            </bs.Row>\n        </bs.Container>\n    </Form>\n)\n\n\n/**\n * A form input.\n *   props.title - the title that shows above the input box\n *   props.type - the type of input (see React Bootstrap Form.Control)\n *   props.placeholder - placeholder text in the input\n */\nconst Input = (props) => (\n    <Field name={props.name}>{rProps => (\n        <bs.Form.Group>\n            {props.title &&\n                <bs.Form.Label>{props.title}</bs.Form.Label>\n            }\n            <bs.Form.Control\n                type=\"text\"  // ...rProps.field may override this default\n                disabled={rProps.form.isSubmitting}\n                placeholder={props.placeholder}\n                {...rProps.field}\n            />\n            {rProps.meta.touched && rProps.meta.error &&\n                <div className=\"text-danger\">{rProps.meta.error}</div>\n            }\n        </bs.Form.Group>\n    )}</Field>\n)\n","import React from 'react'\nimport * as bs from 'react-bootstrap'\nimport { Formik, Form, Field} from 'formik'\n// import { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\n// import { loadStripe } from '@stripe/stripe-js';\n\n\n// const stripePromise = loadStripe(...)\n\n\nfunction Checkout(props) {\n    // we'll add Stripe's Elements component here later\n    return (\n        <CheckoutController />\n    )\n}\nexport default Checkout\n\n\nconst CheckoutController = props => {\n    const total = 50.00 // context.getCartTotal()\n\n    return (\n        <Formik\n            initialValues={{\n                name: 'Conrad Fox',\n                address1: '1234',\n                address2: '5678',\n                city: 'Provo',\n                state: 'UT',\n                zipcode: '84602',\n            }}\n            validateOnChange={false}\n            validateOnBlur={false}\n            validate={values => {\n                const errors = {}\n                console.log('validating', values)\n                return errors\n            }}\n            onSubmit={async (values, actions) => {\n                console.log('submit', values)\n                await new Promise(resolve => {\n                    setTimeout(() => {  // wait 2 seconds, then set the form as \"not submitting\"\n                        resolve()\n                    }, 2000)\n                })\n                console.log('after the 2 seconds')\n            }}\n        >{form => (\n            <PaymentForm form={form} total={total} />\n        )}</Formik>\n    )\n}\n\n\n/**\n * The form layout/html\n */\nconst PaymentForm = props => (\n    <Form>\n        <Input title=\"Name:\" name=\"name\" type=\"text\" />\n        <div>More inputs here</div>\n        <div>Submit button somewhere here</div>\n    </Form>\n)\n\n\n/**\n * A form input.\n *   props.title - the title that shows above the input box\n *   props.type - the type of input (see React Bootstrap Form.Control)\n *   props.placeholder - placeholder text in the input\n */\nconst Input = (props) => (\n    <Field name={props.name}>{rProps => (\n        <bs.Form.Group>\n            {props.title &&\n                <bs.Form.Label>{props.title}</bs.Form.Label>\n            }\n            <bs.Form.Control\n                type={props.type}\n                placeholder={props.placeholder}\n                {...rProps.field}\n            />\n            {rProps.meta.touched && rProps.meta.error &&\n                <div className=\"text-danger\">{rProps.meta.error}</div>\n            }\n        </bs.Form.Group>\n    )}</Field>\n)\n","import React from 'react'\nimport * as bs from 'react-bootstrap'\n\n\nfunction Receipt(props) {\n    return (\n        <bs.Container fluid>\n            <bs.Row>\n                <bs.Col>\n                    <h1 className=\"mt-3\">\n                        Thanks\n                    </h1>\n\n                    Thank you for your order!\n                </bs.Col>\n            </bs.Row>\n        </bs.Container>\n    )\n}\nexport default Receipt\n","import React from 'react'\nimport * as bs from 'react-bootstrap'\n\n\nfunction About(props) {\n    return (\n            <bs.Container fluid className=\"p-4\">\n                <bs.Row noGutters>\n                    <bs.Col>\n                        <div className=\"text-center\"><img alt=\"Arctic.com\" src=\"media/Logo250.png\" /></div>\n                    </bs.Col>\n                </bs.Row>\n                <bs.Row noGutters className=\"mt-5\">\n                    <bs.Col>\n                        Culpa exercitation duis ipsum aliquip magna cupidatat eiusmod cupidatat et fugiat culpa nulla non. Minim voluptate cupidatat ea reprehenderit do exercitation sunt reprehenderit enim aute. Veniam est incididunt amet culpa exercitation. Ut qui nisi minim non id id dolore sint pariatur.\n                    </bs.Col>\n                </bs.Row>\n                <bs.Row noGutters className=\"mt-4\">\n                    <bs.Col>\n                        Incididunt magna reprehenderit commodo dolor mollit est commodo ut et sint. Lorem laboris non proident Lorem ex consectetur anim elit commodo velit. Officia ipsum est exercitation amet eu dolore cillum velit nisi fugiat culpa et enim sunt. Enim qui voluptate anim adipisicing magna irure reprehenderit nulla aute. Occaecat ex amet officia sint proident ex sint Lorem. Elit ullamco id officia qui fugiat. Incididunt velit officia amet nostrud quis incididunt sint sint ipsum non commodo irure proident.\n                    </bs.Col>\n                </bs.Row>\n            </bs.Container>\n    )\n}\nexport default About\n","import React from 'react'\nimport * as bs from 'react-bootstrap'\n\n\nfunction Help(props) {\n    return (\n        <bs.Container fluid className=\"p-4\">\n            <bs.Row noGutters>\n                <bs.Col>\n                    <h1>Help</h1>\n                </bs.Col>\n            </bs.Row>\n            <bs.Row noGutters>\n                <bs.Col>\n                    Culpa exercitation duis ipsum aliquip magna cupidatat eiusmod cupidatat et fugiat culpa nulla non. Minim voluptate cupidatat ea reprehenderit do exercitation sunt reprehenderit enim aute. Veniam est incididunt amet culpa exercitation. Ut qui nisi minim non id id dolore sint pariatur.\n                </bs.Col>\n            </bs.Row>\n        </bs.Container>\n    )\n}\nexport default Help\n","import React from 'react'\nimport * as bs from 'react-bootstrap'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport HeaderContainer from './header-container'\nimport LeftContainer from './left-container'\nimport RightContainer from './right-container'\nimport FooterContainer from './footer-container'\nimport ProductDetail from './product-detail'\nimport Home from './home'\nimport Cart from './cart'\nimport Checkout from './checkout'\nimport CheckoutStarter from './checkout-starter'\nimport Receipt from './receipt'\nimport About from './about'\nimport Help from './help'\nimport './App.scss'\n\n\nfunction App(props) {\n    return (\n        <Router>\n            <bs.Container fluid className=\"p-0 min-vh-100 d-flex flex-column\">\n                <bs.Row noGutters className=\"flex-grow-0 flex-shrink-0 border-bottom shadow-sm\">\n                    <bs.Col className=\"px-3 py-2\">\n                        <HeaderContainer />\n                    </bs.Col>\n                </bs.Row>\n                <bs.Row noGutters className=\"flex-grow-1\">\n                    <bs.Col md=\"2\" className=\"px-3 py-4 border-right\">\n                        <LeftContainer />\n                    </bs.Col>\n                    <bs.Col md=\"8\">\n                        <Switch>\n                            <Route path=\"/product\">\n                                <ProductDetail />\n                            </Route>\n                            <Route path=\"/cart\">\n                                <Cart />\n                            </Route>\n                            <Route path=\"/checkout-starter\">\n                                <CheckoutStarter />\n                            </Route>\n                            <Route path=\"/checkout\">\n                                <Checkout />\n                            </Route>\n                            <Route path=\"/receipt\">\n                                <Receipt />\n                            </Route>\n                            <Route path=\"/about\">\n                                <About />\n                            </Route>\n                            <Route path=\"/help\">\n                                <Help />\n                            </Route>\n                            <Route path=\"/\">\n                                <Home />\n                            </Route>\n                        </Switch>\n                    </bs.Col>\n                    <bs.Col md=\"2\" className=\"px-3 py-4 border-left\">\n                        <RightContainer />\n                    </bs.Col>\n                </bs.Row>\n                <bs.Row noGutters className=\"flex-grow-0 flex-shrink-0\">\n                    <bs.Col className=\"px-3 py-2\">\n                        <FooterContainer />\n                    </bs.Col>\n                </bs.Row>\n            </bs.Container>\n        </Router>\n    )\n}\nexport default App\n","import React from 'react'\nimport axios from 'axios'\nimport { produce } from 'immer'\nimport AppContext from './context'\nimport App from './App'\n\n/** The context provider for our app */\nexport default class AppProvider extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.actions = {\n            addToCart: this.addToCart,\n            removeFromCart: this.removeFromCart,\n            clearCart: this.clearCart,\n            getCartTotal: this.getCartTotal,\n        }\n        this.state = {\n            categories: {},\n            products: {},\n            cart: {},\n            cartCount:0,\n        }\n\n    }\n\n    render() {\n        return (\n            <AppContext.Provider value={{...this.state, ...this.actions}}>\n                <App />\n            </AppContext.Provider>\n        )\n    }\n\n    async componentDidMount() {\n        // load the categories\n        const cat_resp = await axios.get('/api/category')\n        const categories = {}\n        for (const cat of cat_resp.data) {\n            categories[cat.id] = cat\n        }\n\n        // load the products\n        const prod_resp = await axios.get('/api/product')\n        const products = {}\n        for (const prod of prod_resp.data) {\n            products[prod.id] = prod\n        }\n\n        // set in state\n        this.setState({\n            categories: categories,\n            products: products,\n        })\n    }\n\n    /** Adds the given item pid to the shopping cart */\n    addToCart = pid => {\n        this.setState(produce(this.state, draft => {\n            // set this item in the cart\n            draft.cart[pid] = (draft.cart[pid] || 0) + 1\n\n            // count the items in the cart\n            let count = 0\n            for (const qty of Object.values(draft.cart)) {\n                count += qty\n            }\n            draft.cartCount = count\n        }))\n    }\n\n    /** Removes the given item pid from the shopping cart */\n    removeFromCart = pid => {\n        this.setState(produce(this.state, draft => {\n            delete draft.cart[pid]\n\n            // count the items in the cart\n            let count = 0\n            for (const qty of Object.values(draft.cart)) {\n                count += qty\n            }\n            draft.cartCount = count\n        }))\n    }\n\n    /** Clears the cart */\n    clearCart = () => {\n        this.setState(produce(this.state, draft => {\n            draft.cart = {}\n            draft.cartCount = 0\n        }))\n    }\n\n    /** Returns the total price in the cart */\n    getCartTotal = () => {\n        let total = 0.0\n        for (const [pid, qty] of Object.entries(this.state.cart)) {\n            const product = this.state.products[pid]\n            if (product) {\n                total += (qty * product.price)\n            }\n        }\n        return total\n    }\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport AppProvider from './context-provider';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppProvider />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}